---
title: "Dashboard Quarto!"
subtitle: "AAJ - NUADE"
format: dashboard
logo: stf.png
theme: AnnArbor
---

```{r}
#| tags: [parameters]

# to render w/ a different product type:
# quarto render dashboard.qmd -P product_type:Premium

product_type = "Joãozinho"
```

```{r}

if (!require("pacman")) install.packages("pacman")

pacman::p_load(
  tidyverse, data.table,
  readxl, readr, ggcorrplot, cowplot,
  RColorBrewer, scales, nortest, xlsx
)
windowsFonts(Arial=windowsFont("sans"))

# Definindo paleta de cores da stf
cores_stf <- c("#006eab", "#00a8e7","#ffffff", "#000000", # Oficiais; priorizar.
               "#003d5f","#004d78","#005e92","#007ec5","#008fde","#009ff8") # Não oficiais. Evitar usar.

# Definindo paleta de cores da gestão do Min. Barroso

cores_gestao <- c("#0d446e","#0b6ea9","#2ca7df",
                  "#fdb813","#808284","#EE2E62") # O código da 5ª parece incorreto.

# Fontes da gestão: Program Nar OT e Acumin Pro

theme_stf <- function(...) {
  theme <- ggplot2::theme_bw() +
    ggplot2::theme(
      axis.title.y = ggplot2::element_text(colour = "#000000", size = 10),
      axis.title.x = ggplot2::element_text(colour = "#000000", size = 10),
      axis.text = ggplot2::element_text(colour = "#000000", size = 10),
      panel.border = ggplot2::element_blank(),
      axis.line = ggplot2::element_line(colour = "#000000"),
      text = element_text(family = "sans", size = 12),
      legend.position = "top",
      ...
    )
  return(
    list(
      theme,
      scale_fill_manual(values = cores_stf),
      scale_colour_manual(values = cores_stf),
      scale_y_continuous(
        labels = scales::number_format(decimal.mark = ',',
#                                       accuracy = 0.01,
                                       big.mark = "."))
    )
  )
}

# Definindo função que retorna frequências relativas de um vetor
percent <- function(absolute, digits = 2) {
  return(round(100 * absolute / sum(absolute), digits))
}

# Definindo função que retorna banco de dados com frequências
# relativas e absolutas de uma variável categórica
vector_frequencies <- function(vector) {
  frequency <- vector %>%
    table() %>%
    as_tibble() %>%
    mutate(
      rel = n %>%
        percent() %>%
        paste("%", sep = "")
    )
  colnames(frequency) <- c("groups", "absolute", "relative")
  return(frequency)
}


```

# Ministro (`r product_type`)

## Row

```{r}
#| content: valuebox
#| title: "Acervo em 1/01/2024"

list(
  icon = "archive",
  color = "#fdb813",
  value = "25.000"
)
```

```{r}
#| content: valuebox
#| title: "Acervo em 1/02/2024"

list(
  icon = "graph-down",
  color = "#EE2E62",
  value = "23.000"
)
```

```{r}
#| content: valuebox
#| title: "Diminuição do acervo"

list(
  icon = "bullseye",
  color = "#0d446e",
  value = "5%"
)
```

## Row {height="60%"}

```{r}
#| title: Um gráfico qualquer

data <- aggregate(iris$Sepal.Length, by=list(Species=iris$Species), FUN=mean)

ggplot(data, aes(x=Species, y=x)) +
  geom_bar(stat="identity", fill=cores_stf[1]) +
  labs(x="Espécie", y="Comprimento médio da sépala") +
  theme_stf() +
  ggtitle("Comprimento médio da sépala por espécie")

```


```{r}
#| title: Um outro gráfico qualquer

data <- aggregate(mtcars$mpg, by=list(Cylinders=mtcars$cyl), FUN=mean)

ggplot(data, aes(x=Cylinders, y=x)) +
  geom_bar(stat="identity", fill=cores_stf[2]) +
  labs(x="Número de cilindros", y="Média de milhas por galão") +
  theme_stf() +
  ggtitle("Média de milhas por galão por número de cilindros")

```

## Row

```{r}
#| title: Uma lista qualquer
mtcars
```

# Ministra Mariazinha 

```{r}
#| title: Lista qualquer
mtcars
```

```{r}
#| title: Outra lista qualquer
iris
```